<Application x:Class="KubeMgr.WpfApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:KubeMgr.WpfApp.Converters"
             xmlns:local="clr-namespace:KubeMgr.WpfApp">

  <Application.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
          <local:AppBootstrapper x:Key="bootstrapper" />

          <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
          <converters:CapacityDictionaryToValueConverter x:Key="CapacityDictionaryToValueConverter" />
          <converters:LabelsDictionaryToRoleConverter x:Key="LabelsDictionaryToRoleConverter" />
          <converters:NodeAddressListToAddressConverter x:Key="NodeAddressListToAddressConverter" />
          <converters:NodeConditionListToColorConverter x:Key="NodeConditionListToColorConverter" />
          <converters:NodeConditionListToReasonConverter x:Key="NodeConditionListToReasonConverter" />
          <converters:NotEqualToVisibilityConverter x:Key="NotEqualToVisibilityConverter" />

          <converters:EnumListConfigKind x:Key="EnumListConfigKind" />

          <Style TargetType="DataGrid">
            <Setter Property="AlternationCount" Value="1" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="AlternatingRowBackground" Value="#FFA2FFFF" />
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="CanUserAddRows" Value="False" />
          </Style>

          <Style x:Key="RightAlignStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextAlignment" Value="Right" />
          </Style>

          <Style x:Key="RightAlignAndBoldStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="TextAlignment" Value="Right" />
          </Style>

          <Style x:Key="ClearTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                  <Grid>
                    <TextBox Text="{TemplateBinding Text}" BorderThickness="0" Background="Transparent"/>
                  </Grid>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>

          <Style TargetType="Button">
            <Style.Resources>
              <Style TargetType="Image">
                <Style.Triggers>
                  <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.2" />
                  </Trigger>
                </Style.Triggers>
              </Style>
            </Style.Resources>
          </Style>

          <Style x:Key="LinkButton" TargetType="Button">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="Button">
                  <TextBlock TextDecorations="Underline">
                    <ContentPresenter />
                  </TextBlock>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="Blue" />
            <Setter Property="Cursor" Value="Hand" />
            <Style.Triggers>
              <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="Red" />
              </Trigger>
            </Style.Triggers>
          </Style>

          <Style x:Key="TabCloseButton" TargetType="Button">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="Button">
                  <TextBlock>
                    <ContentPresenter />
                  </TextBlock>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="DarkGray" />
            <Setter Property="Cursor" Value="Hand" />
            <Style.Triggers>
              <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="Red" />
              </Trigger>
            </Style.Triggers>
          </Style>

        </ResourceDictionary>
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>
  </Application.Resources>

</Application>
